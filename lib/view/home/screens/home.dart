import 'package:driver/generated/assets.dart';import 'package:driver/utilitys/app_const.dart';import 'package:driver/utilitys/colors.dart';import 'package:driver/view/delivery_management/all_delivery.dart';import 'package:driver/view/delivery_boy_management/delivery_boy_list.dart';import 'package:driver/view/home/widgets/app_drawer.dart';import 'package:driver/view/home/widgets/menu.dart';import 'package:driver/view/restaurent_management/Todo_Restaurante.dart';import 'package:driver/widgets/text_widgets.dart';import 'package:firebase_messaging/firebase_messaging.dart';import 'package:flutter/material.dart';import '../../../notification/local_notification.dart';import '../../../widgets/order_from_restaurent_list_view.dart';import '../../auth/setting.dart';import '../widgets/all_order_from_restaurant.dart';import '../widgets/home_search.dart';class Home extends StatefulWidget {  const Home({Key? key}) : super(key: key);  @override  State<Home> createState() => _HomeState();}class _HomeState extends State<Home> {  final _key = GlobalKey<ScaffoldState>();  final _searchController = TextEditingController();  @override  void initState() {    // TODO: implement initState    super.initState();    // 1. This method call when app in terminated state and you get a notification    // when you click on notification app open from terminated state and you can get notification data in this method    FirebaseMessaging.instance.getInitialMessage().then(          (message) {        print("FirebaseMessaging.instance.getInitialMessage");        if (message != null) {          ///TODO: manage condition for notification        }      },    );    // 2. This method only call when App in forground it mean app must be opened    FirebaseMessaging.onMessage.listen(          (message) {        if (message.notification != null) {          LocalNotificationService.createanddisplaynotification(message);        }      },    );    // 3. This method only call when App in background and not terminated(not closed)    FirebaseMessaging.onMessageOpenedApp.listen(          (message) {            ///TODO: manage condition for notification      },    );  }  @override  Widget build(BuildContext context) {        var size = MediaQuery.of(context).size;        return SafeArea(child: Scaffold(      key: _key,      backgroundColor: AppColors.aapbg,      drawer: AppDrawer(),      appBar: AppBar(        elevation: 1,        backgroundColor: AppColors.aapbg,        centerTitle: true,        leading: IconButton(onPressed: (){            _key.currentState?.openDrawer();        }, icon: Icon(Icons.menu,size: 35,color: Colors.black,)),        title:Row(          children: [            Container(              height: 50,              width: 60,              child: Image.asset(AppConst.brand_image,fit: BoxFit.contain,),            ),            const Text("Admin Panel",              style: TextStyle(fontSize: 20,color: Colors.black,fontWeight: FontWeight.w800),),            SizedBox(width: 15,),          ],        ),        actions: [          Container(            margin: EdgeInsets.only(right: 10, top: 4, bottom: 4),            alignment: Alignment.center,            height: 40,            width: 50,            decoration: BoxDecoration(              color: Colors.black,              borderRadius: BorderRadius.circular(100),            ),            child: Center(child: IconButton(                onPressed: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=> Setting())),                icon: Icon(Icons.settings,color: Colors.white,size: 30,))),          ),        ],      ),      body: SingleChildScrollView(        padding: EdgeInsets.all(15),        child: Column(          mainAxisAlignment: MainAxisAlignment.start,          crossAxisAlignment: CrossAxisAlignment.start,          children: [            Row(              mainAxisAlignment: MainAxisAlignment.spaceBetween,              children: [                Expanded(                  child: InkWell(                  onTap: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=>Restaturentmanagement())),                  child: Container(                    height: 40,                    padding: const EdgeInsets.all(4),                    decoration: BoxDecoration(                      color: AppColors.mainColor,                      borderRadius: BorderRadius.circular(20),                    ),                    child: Row(                      crossAxisAlignment: CrossAxisAlignment.center,                      mainAxisAlignment: MainAxisAlignment.center,                      children: [                        Icon(Icons.add,size: 30,color: Colors.white,),                        SizedBox(width: 5,),                        Text("Crear nuevo restaurante",style: TextStyle(color: Colors.white,fontSize: 10),)                      ],                    ),                  ),                  ),                ),                SizedBox(width: 15,),                Expanded(                  child: InkWell(                  onTap: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=>AllDeliveryBoy())),                  child: Container(                    height: 40,                    decoration: BoxDecoration(                      color: AppColors.black,                      borderRadius: BorderRadius.circular(20),                    ),                    child: Row(                      mainAxisAlignment: MainAxisAlignment.center,                      crossAxisAlignment: CrossAxisAlignment.center,                      children: [                        Icon(Icons.add,size: 30,color: Colors.white,),                        SizedBox(width: 5,),                        Text("Realizar nueva entrega",style: TextStyle(color: Colors.white,fontSize: 10),)                      ],                    ),                  ),                  ),                ),              ],            ),            SizedBox(height: 20,),            //order from restaurant count            AppOrdersFromRestaurentHomeWidget(),            // SizedBox(height: 15,),            //            // Column(            //   mainAxisAlignment: MainAxisAlignment.start,            //   crossAxisAlignment: CrossAxisAlignment.start,            //   children: [            //     Text("My Order's",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold),),            //     SizedBox(height: 10,),            //     Row(            //       mainAxisAlignment: MainAxisAlignment.spaceBetween,            //       children: [            //         HomeBox(            //           title: "Pending Orders",            //           total: "130",            //           color: AppColors.blue,            //           onTap: (){},            //         ),            //         SizedBox(width: 15,),            //         HomeBox(            //           title: "Delivery Orders",            //           total: "130",            //           color: Colors.green,            //           onTap: (){},            //         ),            //         SizedBox(width: 15,),            //         HomeBox(            //           title: "Total Orders",            //           total: "130",            //           color: Colors.deepPurple,            //           onTap: (){},            //         ),            //       ],            //     ),            //   ],            // ),            SizedBox(height: 15,),            Row(              mainAxisAlignment: MainAxisAlignment.spaceBetween,              children: [                Text("Recent order from Restaurant",style: TextStyle(fontSize: 17,fontWeight: FontWeight.bold),),                TextButton(onPressed: (){                  Navigator.push(context, MaterialPageRoute(builder: (context)=>All_Delivery()));                },                    child: Text("View All",style: TextStyle(color: Colors.black),))              ],            ),            OrderFromRestaurentListView(itemCount: 10,),          ],        ),      ),    ),    );  }}class HomeBox extends StatelessWidget {  const HomeBox({    super.key, required this.total, required this.title, required this.color, required this.onTap,  });  final String total;  final String title;  final Color color;  final VoidCallback onTap;  @override  Widget build(BuildContext context) {    return Expanded(        child: InkWell(      onTap: onTap,      child: Container(        padding: EdgeInsets.all(10),        decoration: BoxDecoration(          color: color,          borderRadius: BorderRadius.circular(5),        ),        child: Column(          mainAxisAlignment: MainAxisAlignment.center,          children: [            Text("$total",              style: TextStyle(                  fontSize: 25,color: Colors.white,fontWeight: FontWeight.bold),),            Text("$title",              style: TextStyle(fontSize: 11,color: Colors.white,fontWeight: FontWeight.w400),),          ],        ),      ),    ));  }}
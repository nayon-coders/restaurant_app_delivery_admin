import 'package:driver/firebase/controller/authController.dart';import 'package:driver/utilitys/app_const.dart';import 'package:driver/utilitys/colors.dart';import 'package:driver/view/auth/forget_password.dart';import 'package:driver/view/home/screens/home.dart';import 'package:driver/widgets/app_inputs.dart';import 'package:driver/widgets/text_widgets.dart';import 'package:firebase_messaging/firebase_messaging.dart';import 'package:flutter/material.dart';import 'package:font_awesome_flutter/font_awesome_flutter.dart';import '../../widgets/appButton.dart';class Login extends StatefulWidget {  const Login({Key? key}) : super(key: key);  @override  State<Login> createState() => _LoginState();}class _LoginState extends State<Login> {  final _loginFormState = GlobalKey<FormState>();  final _email = TextEditingController();  final _pass = TextEditingController();  bool _showPassword = false;  bool _isLoading = false;  var deviceTokenToSendPushNotification;  Future<void> getDeviceTokenToSendNotification() async {    final FirebaseMessaging _fcm = FirebaseMessaging.instance;    final token = await _fcm.getToken();    deviceTokenToSendPushNotification = token.toString();    print("Token Value $deviceTokenToSendPushNotification");  }  @override  void initState() {    // TODO: implement initState    super.initState();    getDeviceTokenToSendNotification();  }  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: AppColors.bgColor,      body:SingleChildScrollView(        padding: EdgeInsets.only(top: 100, bottom: 20, right: 20, left: 20),        child: Column(          mainAxisAlignment: MainAxisAlignment.start,          crossAxisAlignment: CrossAxisAlignment.start,          children: [            Image.asset("${AppConst.app_logo}" , height: 140, width: 140,),            SizedBox(height: 30,),            TextWithSubText(              title: "Login",              subTitle: "Enter your email and we'll send you a login code",            ),             SizedBox(height: 20,),            Form(              key: _loginFormState,                child: Column(                  children: [                    AppInput(                        title: "Email",                        hintText: "jhon@gmail.com",                        controller: _email,                        validator: (v){                              if(v!.isEmpty){                                return "Email must not be empty.";                              }else{                                return null;                              }                        },                     ),                    SizedBox(height: 20,),                    AppInput(                      title: "Password",                      hintText: "password",                      controller: _pass,                      obscureText: _showPassword,                      suffixIcon: IconButton(                        onPressed: (){                          setState(() {                            _showPassword = !_showPassword;                          });                        },                        icon: Icon(_showPassword ?Icons.visibility: Icons.visibility_off, color: AppColors.bgColor,),),                      validator: (v){                        if(v!.isEmpty){                          return "Password must not be empty.";                        }else{                          return null;                        }                      },                    ),                    Align(                      alignment: Alignment.centerRight,                      child: TextButton(                        onPressed: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=> ForgotPassword())),                         child: Text("Forgot password?"),                      ),                    ),                    SizedBox(height: 30,),                    AppButton(                      width: 150,                      height: 50,                      onClick: ()async{                        setState(() => _isLoading = true);                        await AuthController.signInWithEmailAndPassword(context: context, email: _email.text, pass: _pass.text, token: deviceTokenToSendPushNotification); //calling the signInWithEmailAndPassword method from the AuthController                        setState(() => _isLoading = false);                      },                      text: "Login",                      isLoading: _isLoading,                    ),                    SizedBox(height: 20,),                  ],                ))          ],        ),      ),    );  }}
import 'package:cloud_firestore/cloud_firestore.dart';import 'package:driver/view/delivery_boy_management/delivery_boy_list.dart';import 'package:driver/widgets/app_tost.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';class FireabaseDeliveryBoyController{  static final _auth = FirebaseAuth.instance;  static final _firestore = FirebaseFirestore.instance;    //add new delivery  static Future<bool> addDeliveryBoy({required BuildContext context, required Map<String, dynamic> data})async{    try{        int id = DateTime.now().millisecondsSinceEpoch;      await _firestore.collection("delivery_boys").doc(data["email"]).set(data).then((value) {        AppToast.showToast("New Delivery boy added.", Colors.green);        Navigator.push(context, MaterialPageRoute(builder: (context)=>AllDeliveryBoy()));      });      return true;    }catch(e){      return false;    }  }  //edit delivery  static Future<bool> editDeliveryBoy({required BuildContext context, required Map<String, dynamic> data, required String docId})async {    try {      await _firestore.collection        ("delivery_boys").doc(docId).update(data).then((value) {        AppToast.showToast("Delivery boy profile updated.", Colors.green);        Navigator.push(            context, MaterialPageRoute(builder: (context) => AllDeliveryBoy()));      });      return true;    } catch (e) {      return false;    }  }  //update status of delivery  static Future<bool> updateDeliveryBoyStatus({required String status, required docId, required BuildContext context})async{    try{      _firestore.collection("delivery_boys").doc(docId).update({"status": status}).then((value) {        AppToast.showToast("Status change. ", Colors.green);        Navigator.push(context, MaterialPageRoute(builder: (context)=>AllDeliveryBoy()));      });      return true;    }catch(e){      return false;    }  }  //delete delivery  static Future<bool> deleteDeliveryBoy({required String docId, required BuildContext context})async {    try {      _firestore.collection        ("delivery_boys").doc(docId).delete().then((value) {        AppToast.showToast(            "Delivery boy is deleted successfully.", Colors.green);        Navigator.push(            context, MaterialPageRoute(builder: (context) => AllDeliveryBoy()));      });      return true;    } catch (e) {      return false;    }  }    }
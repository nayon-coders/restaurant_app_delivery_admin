import 'package:cloud_firestore/cloud_firestore.dart';import 'package:driver/view/restaurent_management/Todo_Restaurante.dart';import 'package:driver/widgets/app_tost.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';class FirebaseRestaurentController{  static final _auth = FirebaseAuth.instance;  static final _firestore = FirebaseFirestore.instance;  //get all restaurents  static Future<List> getRestaurents() async {    try {      //get all restaurents      return [];    } catch (e) {      print('Error getting restaurents: $e');      return [];    }  }  //get restaurent by id  static Future<Map> updateRetaurantStatus({required String id, required String status, required BuildContext context}) async {    try {      FirebaseFirestore.instance.collection("restaurants").doc(id).update({        "status":"$status"      }).then((value) {        Navigator.push(context, MaterialPageRoute(builder: (context)=>Restaturentmanagement()));        AppToast.showToast("Restaurant is deactivate now.", Colors.green);      });      return {};    } catch (e) {      print('Error getting restaurent by id: $e');      return {};    }  }  //add restaurent  static Future<bool> addRestaurant(restaurent, context) async {    try {      int id = DateTime.now().millisecondsSinceEpoch;      //add restaurent      await _firestore.collection('restaurants').doc("${restaurent["email"]}").set(restaurent).then((value){        _auth.createUserWithEmailAndPassword(email: restaurent["email"], password: restaurent["password"]).then((value) {          AppToast.showToast("Restaurant added successfully", Colors.green);          Navigator.push(context, MaterialPageRoute(builder: (context)=>Restaturentmanagement()));        });      });      return true;    } catch (e) {      print('Error adding restaurant: $e');      return false;    }  }  //update restaurent  static Future<bool> updateRestaurant(restaurent, id, context) async {    try {      //update restaurent      await _firestore.collection('restaurants').doc(id).update(restaurent).then((value){        AppToast.showToast("Restaurant updated successfully", Colors.green);        Navigator.push(context, MaterialPageRoute(builder: (context)=>Restaturentmanagement()));      });      return true;    } catch (e) {      print('Error updating restaurent: $e');      return false;    }  }  //delete restaurent  static Future<bool> deleteRestaurant({required String id, required BuildContext context}) async {    try {      //delete restaurent      await _firestore.collection('restaurants').doc(id).delete();      AppToast.showToast("Restaurant deleted successfully", Colors.green);      Navigator.push(context, MaterialPageRoute(builder: (context)=>Restaturentmanagement()));      return true;    } catch (e) {      print('Error deleting restaurent: $e');      return false;    }  }}